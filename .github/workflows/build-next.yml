# This file is autogenerated by maturin v1.5.1
# To update, run
#
#    maturin generate-ci github -m pyprojects/sphinx-jsx/Cargo.toml --platform linux macos
#
name: CI

on:
  push:
    branches:
      - next
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          # - runner: ubuntu-latest
          #   target: s390x
          # - runner: ubuntu-latest
          #   target: ppc64le
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4
      # - uses: pnpm/action-setup@v3
      #   with:
      #     version: 8
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: "18"
      # - run: pnpm install
      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ matrix.python }}
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Build static files
        run: deno run -A crates/swc-ecma-transform-sphinx/scripts/build.js
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --manifest-path pyprojects/sphinx-jsx/Cargo.toml
          sccache: "true"
          manylinux: manylinux2014
          before-script-linux: |
            yum install -y openssl-devel
      - name: Test
        run: cargo test --release --all-features
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4
      # - uses: pnpm/action-setup@v3
      #   with:
      #     version: 8
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: "18"
      #     cache: "pnpm"
      # - run: pnpm install
      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ matrix.python }}
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Build static files
        run: deno run -A crates/swc-ecma-transform-sphinx/scripts/build.js
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --manifest-path pyprojects/sphinx-jsx/Cargo.toml
          sccache: "true"
      - name: Test
        run: cargo test --release --all-features
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  # sdist:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build sdist
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         command: sdist
  #         args: --out dist --manifest-path pyprojects/sphinx-jsx/Cargo.toml
  #     - name: Upload sdist
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-sdist
  #         path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/next'
    needs: [linux, macos]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
