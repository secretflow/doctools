# This file is autogenerated by maturin v1.5.1
# To update, run
#
#    maturin generate-ci github -m pyprojects/sphinx-jsx/Cargo.toml --platform linux macos
#
name: CI

on:
  push:
    branches:
      - next
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
            # https://github.com/PyO3/maturin-action?tab=readme-ov-file#manylinux-docker-container
            # quay.io/pypa/manylinux_2_28_x86_64:latest
            before-script: |
              yum install -y perl-IPC-Cmd
          # - runner: ubuntu-latest
          # target: x86
          - runner: ubuntu-latest
            target: aarch64
            # ghcr.io/rust-cross/manylinux_2_28-cross:aarch64
            before-script: |
              echo
          # - runner: ubuntu-latest
          #   target: armv7
          #   before-script: |
          #     echo
          # - runner: ubuntu-latest
          #   target: s390x
          # - runner: ubuntu-latest
          #   target: ppc64le
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        command:
          - build
          - test

    steps:
      - uses: actions/checkout@v4

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Build static files
        run: deno run -A crates/swc-ecma-transform-sphinx/scripts/build.js

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build wheels
        if: ${{ matrix.command == 'build' }}
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --interpreter python${{ matrix.python }} --manifest-path pyprojects/sphinx-jsx/Cargo.toml --out dist
          # sccache: "true"
          manylinux: "2_28"
          before-script-linux: ${{ matrix.platform.before-script }}

      - name: Upload artifacts
        if: ${{ matrix.command == 'build' }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}-${{ matrix.python }}
          path: dist

      - name: Test
        if: ${{ matrix.command == 'test' }}
        run: cargo test --release --all-features

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        command:
          - build
          - test

    steps:
      - uses: actions/checkout@v4

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Build static files
        run: deno run -A crates/swc-ecma-transform-sphinx/scripts/build.js

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build wheels
        if: ${{ matrix.command == 'build' }}
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --interpreter python${{ matrix.python }} --manifest-path pyprojects/sphinx-jsx/Cargo.toml --out dist
          sccache: "true"

      - name: Upload artifacts
        if: ${{ matrix.command == 'build' }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}-${{ matrix.python }}
          path: dist

      - name: Test
        if: ${{ matrix.command == 'test' }}
        run: cargo test --release --all-features

  # # sdist:
  # #   runs-on: ubuntu-latest
  # #   steps:
  # #     - uses: actions/checkout@v4
  # #     - name: Build sdist
  # #       uses: PyO3/maturin-action@v1
  # #       with:
  # #         command: sdist
  # #         args: --out dist --manifest-path pyprojects/sphinx-jsx/Cargo.toml
  # #     - name: Upload sdist
  # #       uses: actions/upload-artifact@v4
  # #       with:
  # #         name: wheels-sdist
  # #         path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/next'
    needs: [linux, macos]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
