---
source: crates/fuzzy-sourcemap/src/lib.rs
expression: "&results"
---
- NotFound:
    file_name: ~
    line_number: ~
    raw_source: ""
    node_name: document
- Found:
    query:
      file_name: markdown.md
      line_number: 1
      raw_source: "<!--\n\nAdapted from https://spec.commonmark.org/0.31.2/. John MacFarlane. CC BY-SA 4.0. Source at https://github.com/commonmark/commonmark-spec/blob/9103e341a973013013bb1a80e13567007c5cef6f/spec.txt\n\nAdapted from https://github.com/rust-lang/book. The Rust Project Developers. MIT or Apache-2.0.\n\n-->\n"
      node_name: raw
    span:
      start: 2
      end: 301
      ctxt: 0
    slice: "<!--\n\nAdapted from https://spec.commonmark.org/0.31.2/. John MacFarlane. CC BY-SA 4.0. Source at https://github.com/commonmark/commonmark-spec/blob/9103e341a973013013bb1a80e13567007c5cef6f/spec.txt\n\nAdapted from https://github.com/rust-lang/book. The Rust Project Developers. MIT or Apache-2.0.\n\n-->"
- Found:
    query:
      file_name: markdown.md
      line_number: 9
      raw_source: ""
      node_name: section
    span:
      start: 303
      end: 317
      ctxt: 0
    slice: "# [CommonMark]"
- Found:
    query:
      file_name: markdown.md
      line_number: 9
      raw_source: "[CommonMark]"
      node_name: title
    span:
      start: 305
      end: 317
      ctxt: 0
    slice: "[CommonMark]"
- Found:
    query:
      file_name: markdown.md
      line_number: 9
      raw_source: CommonMark
      node_name: reference
    span:
      start: 306
      end: 316
      ctxt: 0
    slice: CommonMark
- Found:
    query:
      file_name: markdown.md
      line_number: 13
      raw_source: "Markdown is a plain text format for writing structured documents,\nbased on conventions for indicating formatting in email\nand usenet posts. It was developed by John Gruber (with\nhelp from Aaron Swartz) and released in 2004 in the form of a\n[syntax description](https://daringfireball.net/projects/markdown/syntax)\nand a Perl script (`Markdown.pl`) for converting Markdown to\nHTML. In the next decade, dozens of implementations were\ndeveloped in many languages. Some extended the original\nMarkdown syntax with conventions for footnotes, tables, and\nother document elements. Some allowed Markdown documents to be\nrendered in formats other than HTML. Websites like Reddit,\nStackOverflow, and GitHub had millions of people using Markdown.\nAnd Markdown started to be used beyond the web, to author books,\narticles, slide shows, letters, and lecture notes."
      node_name: paragraph
    span:
      start: 357
      end: 1207
      ctxt: 0
    slice: "Markdown is a plain text format for writing structured documents,\nbased on conventions for indicating formatting in email\nand usenet posts. It was developed by John Gruber (with\nhelp from Aaron Swartz) and released in 2004 in the form of a\n[syntax description](https://daringfireball.net/projects/markdown/syntax)\nand a Perl script (`Markdown.pl`) for converting Markdown to\nHTML. In the next decade, dozens of implementations were\ndeveloped in many languages. Some extended the original\nMarkdown syntax with conventions for footnotes, tables, and\nother document elements. Some allowed Markdown documents to be\nrendered in formats other than HTML. Websites like Reddit,\nStackOverflow, and GitHub had millions of people using Markdown.\nAnd Markdown started to be used beyond the web, to author books,\narticles, slide shows, letters, and lecture notes."
- Found:
    query:
      file_name: markdown.md
      line_number: 13
      raw_source: syntax description
      node_name: reference
    span:
      start: 598
      end: 616
      ctxt: 0
    slice: syntax description
- Found:
    query:
      file_name: markdown.md
      line_number: 13
      raw_source: Markdown.pl
      node_name: literal
    span:
      start: 691
      end: 702
      ctxt: 0
    slice: Markdown.pl
- Found:
    query:
      file_name: markdown.md
      line_number: 28
      raw_source: "What distinguishes Markdown from many other lightweight markup\nsyntaxes, which are often easier to write, is its readability.\nAs Gruber writes:"
      node_name: paragraph
    span:
      start: 1209
      end: 1352
      ctxt: 0
    slice: "What distinguishes Markdown from many other lightweight markup\nsyntaxes, which are often easier to write, is its readability.\nAs Gruber writes:"
- Found:
    query:
      file_name: markdown.md
      line_number: 32
      raw_source: ""
      node_name: block_quote
    span:
      start: 1354
      end: 1684
      ctxt: 0
    slice: "> The overriding design goal for Markdown's formatting syntax is\n> to make it as readable as possible. The idea is that a\n> Markdown-formatted document should be publishable as-is, as\n> plain text, without looking like it's been marked up with tags\n> or formatting instructions.\n> (<https://daringfireball.net/projects/markdown/>)"
- Found:
    query:
      file_name: markdown.md
      line_number: 32
      raw_source: "The overriding design goal for Markdown's formatting syntax is\nto make it as readable as possible. The idea is that a\nMarkdown-formatted document should be publishable as-is, as\nplain text, without looking like it's been marked up with tags\nor formatting instructions.\n(<https://daringfireball.net/projects/markdown/>)"
      node_name: paragraph
    span:
      start: 1354
      end: 1684
      ctxt: 0
    slice: "> The overriding design goal for Markdown's formatting syntax is\n> to make it as readable as possible. The idea is that a\n> Markdown-formatted document should be publishable as-is, as\n> plain text, without looking like it's been marked up with tags\n> or formatting instructions.\n> (<https://daringfireball.net/projects/markdown/>)"
- Found:
    query:
      file_name: markdown.md
      line_number: 32
      raw_source: "https://daringfireball.net/projects/markdown/"
      node_name: reference
    span:
      start: 1637
      end: 1682
      ctxt: 0
    slice: "https://daringfireball.net/projects/markdown/"
- Found:
    query:
      file_name: markdown.md
      line_number: 39
      raw_source: ""
      node_name: section
    span:
      start: 1686
      end: 1713
      ctxt: 0
    slice: "## 4.4 Indented code blocks"
- Found:
    query:
      file_name: markdown.md
      line_number: 39
      raw_source: 4.4 Indented code blocks
      node_name: title
    span:
      start: 1689
      end: 1713
      ctxt: 0
    slice: 4.4 Indented code blocks
- Found:
    query:
      file_name: markdown.md
      line_number: 41
      raw_source: "An indented code block is composed of one or more\n[indented chunks] separated by blank lines.\nAn indented chunk is a sequence of non-blank lines,\neach preceded by four or more spaces of indentation. The contents of the code\nblock are the literal contents of the lines, including trailing\n[line endings], minus four spaces of indentation.\nAn indented code block has no [info string]."
      node_name: paragraph
    span:
      start: 1715
      end: 2097
      ctxt: 0
    slice: "An indented code block is composed of one or more\n[indented chunks] separated by blank lines.\nAn indented chunk is a sequence of non-blank lines,\neach preceded by four or more spaces of indentation. The contents of the code\nblock are the literal contents of the lines, including trailing\n[line endings], minus four spaces of indentation.\nAn indented code block has no [info string]."
- Found:
    query:
      file_name: markdown.md
      line_number: 49
      raw_source: "An indented code block cannot interrupt a paragraph, so there must be\na blank line between a paragraph and a following indented code block.\n(A blank line is not needed, however, between a code block and a following\nparagraph.)"
      node_name: paragraph
    span:
      start: 2099
      end: 2325
      ctxt: 0
    slice: "An indented code block cannot interrupt a paragraph, so there must be\na blank line between a paragraph and a following indented code block.\n(A blank line is not needed, however, between a code block and a following\nparagraph.)"
- Found:
    query:
      file_name: markdown.md
      line_number: 54
      raw_source: "a simple\n  indented code block\n"
      node_name: literal_block
    span:
      start: 2327
      end: 2365
      ctxt: 0
    slice: "    a simple\n      indented code block"
- Found:
    query:
      file_name: markdown.md
      line_number: 57
      raw_source: "If there is any ambiguity between an interpretation of indentation\nas a code block and as indicating that material belongs to a [list\nitem][list items], the list item interpretation takes precedence:"
      node_name: paragraph
    span:
      start: 2367
      end: 2566
      ctxt: 0
    slice: "If there is any ambiguity between an interpretation of indentation\nas a code block and as indicating that material belongs to a [list\nitem][list items], the list item interpretation takes precedence:"
- Found:
    query:
      file_name: markdown.md
      line_number: 61
      raw_source: ""
      node_name: bullet_list
    span:
      start: 2568
      end: 2573
      ctxt: 0
    slice: "- foo"
- Found:
    query:
      file_name: markdown.md
      line_number: 61
      raw_source: ""
      node_name: list_item
    span:
      start: 2568
      end: 2573
      ctxt: 0
    slice: "- foo"
- Found:
    query:
      file_name: markdown.md
      line_number: 61
      raw_source: foo
      node_name: paragraph
    span:
      start: 2570
      end: 2573
      ctxt: 0
    slice: foo
- Found:
    query:
      file_name: markdown.md
      line_number: 63
      raw_source: bar
      node_name: paragraph
    span:
      start: 2577
      end: 2580
      ctxt: 0
    slice: bar
- Found:
    query:
      file_name: markdown.md
      line_number: 65
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 2582
      end: 2588
      ctxt: 0
    slice: 1. foo
- Found:
    query:
      file_name: markdown.md
      line_number: 65
      raw_source: ""
      node_name: list_item
    span:
      start: 2582
      end: 2588
      ctxt: 0
    slice: 1. foo
- Found:
    query:
      file_name: markdown.md
      line_number: 65
      raw_source: foo
      node_name: paragraph
    span:
      start: 2585
      end: 2588
      ctxt: 0
    slice: foo
- Found:
    query:
      file_name: markdown.md
      line_number: 67
      raw_source: ""
      node_name: bullet_list
    span:
      start: 2582
      end: 2598
      ctxt: 0
    slice: "1. foo\n\n   - bar"
- Found:
    query:
      file_name: markdown.md
      line_number: 67
      raw_source: ""
      node_name: list_item
    span:
      start: 2582
      end: 2598
      ctxt: 0
    slice: "1. foo\n\n   - bar"
- Found:
    query:
      file_name: markdown.md
      line_number: 67
      raw_source: bar
      node_name: paragraph
    span:
      start: 2595
      end: 2598
      ctxt: 0
    slice: bar
- Found:
    query:
      file_name: markdown.md
      line_number: 69
      raw_source: "The contents of a code block are literal text, and do not get parsed\nas Markdown:"
      node_name: paragraph
    span:
      start: 2600
      end: 2681
      ctxt: 0
    slice: "The contents of a code block are literal text, and do not get parsed\nas Markdown:"
- Found:
    query:
      file_name: markdown.md
      line_number: 72
      raw_source: "<a/>\n*hi*\n\n- one\n"
      node_name: literal_block
    span:
      start: 2683
      end: 2711
      ctxt: 0
    slice: "    <a/>\n    *hi*\n\n    - one"
- Found:
    query:
      file_name: markdown.md
      line_number: 77
      raw_source: "Here we have three chunks separated by blank lines:"
      node_name: paragraph
    span:
      start: 2713
      end: 2764
      ctxt: 0
    slice: "Here we have three chunks separated by blank lines:"
- Found:
    query:
      file_name: markdown.md
      line_number: 79
      raw_source: "chunk1\n\nchunk2\n\n\n\nchunk3\n"
      node_name: literal_block
    span:
      start: 2766
      end: 2802
      ctxt: 0
    slice: "    chunk1\n\n    chunk2\n\n\n\n    chunk3"
- Found:
    query:
      file_name: markdown.md
      line_number: 87
      raw_source: "Any initial spaces or tabs beyond four spaces of indentation will be included in\nthe content, even in interior blank lines:"
      node_name: paragraph
    span:
      start: 2804
      end: 2927
      ctxt: 0
    slice: "Any initial spaces or tabs beyond four spaces of indentation will be included in\nthe content, even in interior blank lines:"
- Found:
    query:
      file_name: markdown.md
      line_number: 90
      raw_source: "chunk1\n\n  chunk2\n"
      node_name: literal_block
    span:
      start: 2929
      end: 2953
      ctxt: 0
    slice: "    chunk1\n\n      chunk2"
- Found:
    query:
      file_name: markdown.md
      line_number: 94
      raw_source: "An indented code block cannot interrupt a paragraph. (This\nallows hanging indents and the like.)"
      node_name: paragraph
    span:
      start: 2955
      end: 3051
      ctxt: 0
    slice: "An indented code block cannot interrupt a paragraph. (This\nallows hanging indents and the like.)"
- Found:
    query:
      file_name: markdown.md
      line_number: 97
      raw_source: "<!-- prettier-ignore-start -->\n"
      node_name: raw
    span:
      start: 3053
      end: 3083
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 99
      raw_source: "Foo\n    bar"
      node_name: paragraph
    span:
      start: 3085
      end: 3096
      ctxt: 0
    slice: "Foo\n    bar"
- Found:
    query:
      file_name: markdown.md
      line_number: 102
      raw_source: "<!-- prettier-ignore-end -->\n"
      node_name: raw
    span:
      start: 3098
      end: 3126
      ctxt: 0
    slice: "<!-- prettier-ignore-end -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 104
      raw_source: "However, any non-blank line with fewer than four spaces of indentation ends\nthe code block immediately. So a paragraph may occur immediately\nafter indented code:"
      node_name: paragraph
    span:
      start: 3128
      end: 3289
      ctxt: 0
    slice: "However, any non-blank line with fewer than four spaces of indentation ends\nthe code block immediately. So a paragraph may occur immediately\nafter indented code:"
- Found:
    query:
      file_name: markdown.md
      line_number: 108
      raw_source: "<!-- prettier-ignore-start -->\n"
      node_name: raw
    span:
      start: 3291
      end: 3321
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 110
      raw_source: "foo\n"
      node_name: literal_block
    span:
      start: 3327
      end: 3330
      ctxt: 0
    slice: foo
- Found:
    query:
      file_name: markdown.md
      line_number: 111
      raw_source: bar
      node_name: paragraph
    span:
      start: 3331
      end: 3334
      ctxt: 0
    slice: bar
- Found:
    query:
      file_name: markdown.md
      line_number: 113
      raw_source: "<!-- prettier-ignore-end -->\n"
      node_name: raw
    span:
      start: 3336
      end: 3364
      ctxt: 0
    slice: "<!-- prettier-ignore-end -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 115
      raw_source: "And indented code can occur immediately before and after other kinds of blocks:"
      node_name: paragraph
    span:
      start: 3366
      end: 3445
      ctxt: 0
    slice: "And indented code can occur immediately before and after other kinds of blocks:"
- Found:
    query:
      file_name: markdown.md
      line_number: 117
      raw_source: "<!-- prettier-ignore-start -->\n"
      node_name: raw
    span:
      start: 3447
      end: 3477
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 119
      raw_source: ""
      node_name: section
    span:
      start: 3479
      end: 3528
      ctxt: 0
    slice: "#### Heading\n    foo\nHeading\n-------\n    foo\n----"
- Found:
    query:
      file_name: markdown.md
      line_number: 119
      raw_source: Heading
      node_name: title
    span:
      start: 3484
      end: 3491
      ctxt: 0
    slice: Heading
- Found:
    query:
      file_name: markdown.md
      line_number: 120
      raw_source: "foo\n"
      node_name: literal_block
    span:
      start: 3496
      end: 3499
      ctxt: 0
    slice: foo
- Found:
    query:
      file_name: markdown.md
      line_number: 121
      raw_source: ""
      node_name: section
    span:
      start: 3479
      end: 3528
      ctxt: 0
    slice: "#### Heading\n    foo\nHeading\n-------\n    foo\n----"
- Found:
    query:
      file_name: markdown.md
      line_number: 121
      raw_source: Heading
      node_name: title
    span:
      start: 3500
      end: 3507
      ctxt: 0
    slice: Heading
- Found:
    query:
      file_name: markdown.md
      line_number: 123
      raw_source: "foo\n"
      node_name: literal_block
    span:
      start: 3520
      end: 3523
      ctxt: 0
    slice: foo
- Found:
    query:
      file_name: markdown.md
      line_number: 124
      raw_source: ""
      node_name: transition
    span:
      start: 3479
      end: 3528
      ctxt: 0
    slice: "#### Heading\n    foo\nHeading\n-------\n    foo\n----"
- Found:
    query:
      file_name: markdown.md
      line_number: 126
      raw_source: "<!-- prettier-ignore-end -->\n"
      node_name: raw
    span:
      start: 3530
      end: 3558
      ctxt: 0
    slice: "<!-- prettier-ignore-end -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 128
      raw_source: ""
      node_name: section
    span:
      start: 3560
      end: 3585
      ctxt: 0
    slice: "## 4.5 Fenced code blocks"
- Found:
    query:
      file_name: markdown.md
      line_number: 128
      raw_source: 4.5 Fenced code blocks
      node_name: title
    span:
      start: 3563
      end: 3585
      ctxt: 0
    slice: 4.5 Fenced code blocks
- Found:
    query:
      file_name: markdown.md
      line_number: 130
      raw_source: "A code fence is a sequence\nof at least three consecutive backtick characters (`` ` ``) or\ntildes (`~`). (Tildes and backticks cannot be mixed.)\nA fenced code block\nbegins with a code fence, preceded by up to three spaces of indentation."
      node_name: paragraph
    span:
      start: 3587
      end: 3823
      ctxt: 0
    slice: "A code fence is a sequence\nof at least three consecutive backtick characters (`` ` ``) or\ntildes (`~`). (Tildes and backticks cannot be mixed.)\nA fenced code block\nbegins with a code fence, preceded by up to three spaces of indentation."
- Found:
    query:
      file_name: markdown.md
      line_number: 130
      raw_source: "`"
      node_name: literal
    span:
      start: 3665
      end: 3666
      ctxt: 0
    slice: "`"
- Found:
    query:
      file_name: markdown.md
      line_number: 130
      raw_source: "~"
      node_name: literal
    span:
      start: 3686
      end: 3687
      ctxt: 0
    slice: "~"
- Found:
    query:
      file_name: markdown.md
      line_number: 136
      raw_source: "fn main() {\n    println!(\"Hello, world!\");\n}\n"
      node_name: literal_block
    span:
      start: 3833
      end: 3877
      ctxt: 0
    slice: "fn main() {\n    println!(\"Hello, world!\");\n}"
- Found:
    query:
      file_name: markdown.md
      line_number: 142
      raw_source: ""
      node_name: section
    span:
      start: 3883
      end: 3905
      ctxt: 0
    slice: "### What is Ownership?"
- Found:
    query:
      file_name: markdown.md
      line_number: 142
      raw_source: What is Ownership?
      node_name: title
    span:
      start: 3887
      end: 3905
      ctxt: 0
    slice: What is Ownership?
- Found:
    query:
      file_name: markdown.md
      line_number: 144
      raw_source: "The variable `s` refers to a string literal, where the value of the string is\nhardcoded into the text of our program. The variable is valid from the point at\nwhich it’s declared until the end of the current _scope_. Listing 4-1 shows a\nprogram with comments annotating where the variable `s` would be valid."
      node_name: paragraph
    span:
      start: 3907
      end: 4216
      ctxt: 0
    slice: "The variable `s` refers to a string literal, where the value of the string is\nhardcoded into the text of our program. The variable is valid from the point at\nwhich it’s declared until the end of the current _scope_. Listing 4-1 shows a\nprogram with comments annotating where the variable `s` would be valid."
- Found:
    query:
      file_name: markdown.md
      line_number: 144
      raw_source: s
      node_name: literal
    span:
      start: 3921
      end: 3922
      ctxt: 0
    slice: s
- Found:
    query:
      file_name: markdown.md
      line_number: 144
      raw_source: scope
      node_name: emphasis
    span:
      start: 4117
      end: 4122
      ctxt: 0
    slice: scope
- Found:
    query:
      file_name: markdown.md
      line_number: 144
      raw_source: s
      node_name: literal
    span:
      start: 4117
      end: 4118
      ctxt: 0
    slice: s
- Found:
    query:
      file_name: markdown.md
      line_number: 149
      raw_source: "    {                      // s is not valid here, it’s not yet declared\n        let s = \"hello\";   // s is valid from this point forward\n\n        // do stuff with s\n    }                      // this scope is now over, and s is no longer valid\n"
      node_name: literal_block
    span:
      start: 4226
      end: 4472
      ctxt: 0
    slice: "    {                      // s is not valid here, it’s not yet declared\n        let s = \"hello\";   // s is valid from this point forward\n\n        // do stuff with s\n    }                      // this scope is now over, and s is no longer valid"
- Found:
    query:
      file_name: markdown.md
      line_number: 157
      raw_source: "The double colon `::` operator allows us to namespace this particular `from`\nfunction under the `String` type rather than using some sort of name like\n`string_from`. We’ll discuss this syntax more in the [“Method\nSyntax”][method-syntax]<!-- ignore --> section of Chapter 5, and when we talk\nabout namespacing with modules in [“Paths for Referring to an Item in the\nModule Tree”][paths-module-tree]<!-- ignore --> in Chapter 7."
      node_name: paragraph
    span:
      start: 4478
      end: 4914
      ctxt: 0
    slice: "The double colon `::` operator allows us to namespace this particular `from`\nfunction under the `String` type rather than using some sort of name like\n`string_from`. We’ll discuss this syntax more in the [“Method\nSyntax”][method-syntax]<!-- ignore --> section of Chapter 5, and when we talk\nabout namespacing with modules in [“Paths for Referring to an Item in the\nModule Tree”][paths-module-tree]<!-- ignore --> in Chapter 7."
- Found:
    query:
      file_name: markdown.md
      line_number: 157
      raw_source: "::"
      node_name: literal
    span:
      start: 4496
      end: 4498
      ctxt: 0
    slice: "::"
- Found:
    query:
      file_name: markdown.md
      line_number: 157
      raw_source: from
      node_name: literal
    span:
      start: 4549
      end: 4553
      ctxt: 0
    slice: from
- Found:
    query:
      file_name: markdown.md
      line_number: 157
      raw_source: String
      node_name: literal
    span:
      start: 4575
      end: 4581
      ctxt: 0
    slice: String
- Found:
    query:
      file_name: markdown.md
      line_number: 157
      raw_source: string_from
      node_name: literal
    span:
      start: 4630
      end: 4641
      ctxt: 0
    slice: string_from
- Found:
    query:
      file_name: markdown.md
      line_number: 157
      raw_source: "<!-- ignore -->"
      node_name: raw
    span:
      start: 4720
      end: 4735
      ctxt: 0
    slice: "<!-- ignore -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 157
      raw_source: "<!-- ignore -->"
      node_name: raw
    span:
      start: 4720
      end: 4735
      ctxt: 0
    slice: "<!-- ignore -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 164
      raw_source: "This kind of string _can_ be mutated:"
      node_name: paragraph
    span:
      start: 4916
      end: 4953
      ctxt: 0
    slice: "This kind of string _can_ be mutated:"
- Found:
    query:
      file_name: markdown.md
      line_number: 164
      raw_source: can
      node_name: emphasis
    span:
      start: 4937
      end: 4940
      ctxt: 0
    slice: can
- Found:
    query:
      file_name: markdown.md
      line_number: 166
      raw_source: "    let mut s = String::from(\"hello\");\n\n    s.push_str(\", world!\"); // push_str() appends a literal to a String\n\n    println!(\"{}\", s); // This will print `hello, world!`\n"
      node_name: literal_block
    span:
      start: 4963
      end: 5133
      ctxt: 0
    slice: "    let mut s = String::from(\"hello\");\n\n    s.push_str(\", world!\"); // push_str() appends a literal to a String\n\n    println!(\"{}\", s); // This will print `hello, world!`"
- Found:
    query:
      file_name: markdown.md
      line_number: 174
      raw_source: ""
      node_name: section
    span:
      start: 5139
      end: 5177
      ctxt: 0
    slice: "### The `match` Control Flow Construct"
- Found:
    query:
      file_name: markdown.md
      line_number: 174
      raw_source: "The `match` Control Flow Construct"
      node_name: title
    span:
      start: 5143
      end: 5177
      ctxt: 0
    slice: "The `match` Control Flow Construct"
- Found:
    query:
      file_name: markdown.md
      line_number: 174
      raw_source: match
      node_name: literal
    span:
      start: 5148
      end: 5153
      ctxt: 0
    slice: match
- Found:
    query:
      file_name: markdown.md
      line_number: 176
      raw_source: "Speaking of coins, let’s use them as an example using `match`! We can write a\nfunction that takes an unknown US coin and, in a similar way as the counting\nmachine, determines which coin it is and returns its value in cents, as shown\nin Listing 6-3."
      node_name: paragraph
    span:
      start: 5179
      end: 5429
      ctxt: 0
    slice: "Speaking of coins, let’s use them as an example using `match`! We can write a\nfunction that takes an unknown US coin and, in a similar way as the counting\nmachine, determines which coin it is and returns its value in cents, as shown\nin Listing 6-3."
- Found:
    query:
      file_name: markdown.md
      line_number: 176
      raw_source: match
      node_name: literal
    span:
      start: 5236
      end: 5241
      ctxt: 0
    slice: match
- Found:
    query:
      file_name: markdown.md
      line_number: 181
      raw_source: "enum Coin {\n    Penny,\n    Nickel,\n    Dime,\n    Quarter,\n}\n\nfn value_in_cents(coin: Coin) -> u8 {\n    match coin {\n        Coin::Penny => 1,\n        Coin::Nickel => 5,\n        Coin::Dime => 10,\n        Coin::Quarter => 25,\n    }\n}\n"
      node_name: literal_block
    span:
      start: 5439
      end: 5670
      ctxt: 0
    slice: "enum Coin {\n    Penny,\n    Nickel,\n    Dime,\n    Quarter,\n}\n\nfn value_in_cents(coin: Coin) -> u8 {\n    match coin {\n        Coin::Penny => 1,\n        Coin::Nickel => 5,\n        Coin::Dime => 10,\n        Coin::Quarter => 25,\n    }\n}"
- Found:
    query:
      file_name: markdown.md
      line_number: 199
      raw_source: ""
      node_name: section
    span:
      start: 5676
      end: 5694
      ctxt: 0
    slice: "## 4.6 HTML blocks"
- Found:
    query:
      file_name: markdown.md
      line_number: 199
      raw_source: 4.6 HTML blocks
      node_name: title
    span:
      start: 5679
      end: 5694
      ctxt: 0
    slice: 4.6 HTML blocks
- Found:
    query:
      file_name: markdown.md
      line_number: 201
      raw_source: "HTML blocks continue until they are closed by their appropriate\n[end condition], or the last line of the document or other [container\nblock](#container-blocks). This means any HTML **within an HTML\nblock** that might otherwise be recognised as a start condition will\nbe ignored by the parser and passed through as-is, without changing\nthe parser's state."
      node_name: paragraph
    span:
      start: 5696
      end: 6050
      ctxt: 0
    slice: "HTML blocks continue until they are closed by their appropriate\n[end condition], or the last line of the document or other [container\nblock](#container-blocks). This means any HTML **within an HTML\nblock** that might otherwise be recognised as a start condition will\nbe ignored by the parser and passed through as-is, without changing\nthe parser's state."
- NotFound:
    file_name: ~
    line_number: ~
    raw_source: ""
    node_name: reference
- NotFound:
    file_name: ~
    line_number: ~
    raw_source: ""
    node_name: inline
- Found:
    query:
      file_name: markdown.md
      line_number: 201
      raw_source: "within an HTML\nblock"
      node_name: strong
    span:
      start: 5879
      end: 5899
      ctxt: 0
    slice: "within an HTML\nblock"
- Found:
    query:
      file_name: markdown.md
      line_number: 208
      raw_source: "For instance, `<pre>` within an HTML block started by `<table>` will not affect\nthe parser state; as the HTML block was started in by start condition 6, it\nwill end at any blank line. This can be surprising:"
      node_name: paragraph
    span:
      start: 6052
      end: 6259
      ctxt: 0
    slice: "For instance, `<pre>` within an HTML block started by `<table>` will not affect\nthe parser state; as the HTML block was started in by start condition 6, it\nwill end at any blank line. This can be surprising:"
- Found:
    query:
      file_name: markdown.md
      line_number: 208
      raw_source: "<pre>"
      node_name: literal
    span:
      start: 6067
      end: 6072
      ctxt: 0
    slice: "<pre>"
- Found:
    query:
      file_name: markdown.md
      line_number: 208
      raw_source: "<table>"
      node_name: literal
    span:
      start: 6107
      end: 6114
      ctxt: 0
    slice: "<table>"
- Found:
    query:
      file_name: markdown.md
      line_number: 212
      raw_source: "<!-- prettier-ignore-start -->\n"
      node_name: raw
    span:
      start: 6261
      end: 6291
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 214
      raw_source: "<table><tr><td>\n<pre>\n**Hello**,\n"
      node_name: raw
    span:
      start: 6293
      end: 6325
      ctxt: 0
    slice: "<table><tr><td>\n<pre>\n**Hello**,"
- Found:
    query:
      file_name: markdown.md
      line_number: 218
      raw_source: "_world_.\n</pre>"
      node_name: paragraph
    span:
      start: 6327
      end: 6342
      ctxt: 0
    slice: "_world_.\n</pre>"
- Found:
    query:
      file_name: markdown.md
      line_number: 218
      raw_source: world
      node_name: emphasis
    span:
      start: 6328
      end: 6333
      ctxt: 0
    slice: world
- Found:
    query:
      file_name: markdown.md
      line_number: 218
      raw_source: "</pre>"
      node_name: raw
    span:
      start: 6336
      end: 6342
      ctxt: 0
    slice: "</pre>"
- Found:
    query:
      file_name: markdown.md
      line_number: 220
      raw_source: "</td></tr></table>\n"
      node_name: raw
    span:
      start: 6343
      end: 6361
      ctxt: 0
    slice: "</td></tr></table>"
- Found:
    query:
      file_name: markdown.md
      line_number: 222
      raw_source: "<!-- prettier-ignore-end -->\n"
      node_name: raw
    span:
      start: 6363
      end: 6391
      ctxt: 0
    slice: "<!-- prettier-ignore-end -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 224
      raw_source: ""
      node_name: section
    span:
      start: 6393
      end: 6412
      ctxt: 0
    slice: "## 5.1 Block quotes"
- Found:
    query:
      file_name: markdown.md
      line_number: 224
      raw_source: 5.1 Block quotes
      node_name: title
    span:
      start: 6396
      end: 6412
      ctxt: 0
    slice: 5.1 Block quotes
- Found:
    query:
      file_name: markdown.md
      line_number: 226
      raw_source: "The following rules define [block quotes]:"
      node_name: paragraph
    span:
      start: 6414
      end: 6456
      ctxt: 0
    slice: "The following rules define [block quotes]:"
- Found:
    query:
      file_name: markdown.md
      line_number: 228
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 6458
      end: 6695
      ctxt: 0
    slice: "1.  **Basic case.** If a string of lines _Ls_ constitute a sequence\n    of blocks _Bs_, then the result of prepending a [block quote\n    marker] to the beginning of each line in _Ls_\n    is a [block quote](#block-quotes) containing _Bs_."
- Found:
    query:
      file_name: markdown.md
      line_number: 228
      raw_source: ""
      node_name: list_item
    span:
      start: 6458
      end: 6695
      ctxt: 0
    slice: "1.  **Basic case.** If a string of lines _Ls_ constitute a sequence\n    of blocks _Bs_, then the result of prepending a [block quote\n    marker] to the beginning of each line in _Ls_\n    is a [block quote](#block-quotes) containing _Bs_."
- Found:
    query:
      file_name: markdown.md
      line_number: 228
      raw_source: "**Basic case.** If a string of lines _Ls_ constitute a sequence\nof blocks _Bs_, then the result of prepending a [block quote\nmarker] to the beginning of each line in _Ls_\nis a [block quote](#block-quotes) containing _Bs_."
      node_name: paragraph
    span:
      start: 6458
      end: 6695
      ctxt: 0
    slice: "1.  **Basic case.** If a string of lines _Ls_ constitute a sequence\n    of blocks _Bs_, then the result of prepending a [block quote\n    marker] to the beginning of each line in _Ls_\n    is a [block quote](#block-quotes) containing _Bs_."
- Found:
    query:
      file_name: markdown.md
      line_number: 228
      raw_source: Basic case.
      node_name: strong
    span:
      start: 6464
      end: 6475
      ctxt: 0
    slice: Basic case.
- Found:
    query:
      file_name: markdown.md
      line_number: 228
      raw_source: Ls
      node_name: emphasis
    span:
      start: 6500
      end: 6502
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 228
      raw_source: Bs
      node_name: emphasis
    span:
      start: 6541
      end: 6543
      ctxt: 0
    slice: Bs
- Found:
    query:
      file_name: markdown.md
      line_number: 228
      raw_source: Ls
      node_name: emphasis
    span:
      start: 6637
      end: 6639
      ctxt: 0
    slice: Ls
- NotFound:
    file_name: ~
    line_number: ~
    raw_source: ""
    node_name: reference
- NotFound:
    file_name: ~
    line_number: ~
    raw_source: ""
    node_name: inline
- Found:
    query:
      file_name: markdown.md
      line_number: 228
      raw_source: Bs
      node_name: emphasis
    span:
      start: 6691
      end: 6693
      ctxt: 0
    slice: Bs
- Found:
    query:
      file_name: markdown.md
      line_number: 233
      raw_source: ""
      node_name: list_item
    span:
      start: 6697
      end: 7228
      ctxt: 0
    slice: "2.  **Laziness.** If a string of lines _Ls_ constitute a [block\n    quote](#block-quotes) with contents _Bs_, then the result of deleting\n    the initial [block quote marker] from one or\n    more lines in which the next character other than a space or tab after the\n    [block quote marker] is [paragraph continuation\n    text] is a block quote with _Bs_ as its content.\n    Paragraph continuation text is text\n    that will be parsed as part of the content of a paragraph, but does\n    not occur at the beginning of the paragraph."
- Found:
    query:
      file_name: markdown.md
      line_number: 233
      raw_source: "**Laziness.** If a string of lines _Ls_ constitute a [block\nquote](#block-quotes) with contents _Bs_, then the result of deleting\nthe initial [block quote marker] from one or\nmore lines in which the next character other than a space or tab after the\n[block quote marker] is [paragraph continuation\ntext] is a block quote with _Bs_ as its content.\nParagraph continuation text is text\nthat will be parsed as part of the content of a paragraph, but does\nnot occur at the beginning of the paragraph."
      node_name: paragraph
    span:
      start: 6697
      end: 7228
      ctxt: 0
    slice: "2.  **Laziness.** If a string of lines _Ls_ constitute a [block\n    quote](#block-quotes) with contents _Bs_, then the result of deleting\n    the initial [block quote marker] from one or\n    more lines in which the next character other than a space or tab after the\n    [block quote marker] is [paragraph continuation\n    text] is a block quote with _Bs_ as its content.\n    Paragraph continuation text is text\n    that will be parsed as part of the content of a paragraph, but does\n    not occur at the beginning of the paragraph."
- Found:
    query:
      file_name: markdown.md
      line_number: 233
      raw_source: Laziness.
      node_name: strong
    span:
      start: 6703
      end: 6712
      ctxt: 0
    slice: Laziness.
- Found:
    query:
      file_name: markdown.md
      line_number: 233
      raw_source: Ls
      node_name: emphasis
    span:
      start: 6737
      end: 6739
      ctxt: 0
    slice: Ls
- NotFound:
    file_name: ~
    line_number: ~
    raw_source: ""
    node_name: reference
- NotFound:
    file_name: ~
    line_number: ~
    raw_source: ""
    node_name: inline
- Found:
    query:
      file_name: markdown.md
      line_number: 233
      raw_source: Bs
      node_name: emphasis
    span:
      start: 6802
      end: 6804
      ctxt: 0
    slice: Bs
- Found:
    query:
      file_name: markdown.md
      line_number: 233
      raw_source: Bs
      node_name: emphasis
    span:
      start: 6802
      end: 6804
      ctxt: 0
    slice: Bs
- Found:
    query:
      file_name: markdown.md
      line_number: 243
      raw_source: ""
      node_name: list_item
    span:
      start: 7230
      end: 7357
      ctxt: 0
    slice: "3.  **Consecutiveness.** A document cannot contain two [block\n    quotes] in a row unless there is a [blank line] between them."
- Found:
    query:
      file_name: markdown.md
      line_number: 243
      raw_source: "**Consecutiveness.** A document cannot contain two [block\nquotes] in a row unless there is a [blank line] between them."
      node_name: paragraph
    span:
      start: 7230
      end: 7357
      ctxt: 0
    slice: "3.  **Consecutiveness.** A document cannot contain two [block\n    quotes] in a row unless there is a [blank line] between them."
- Found:
    query:
      file_name: markdown.md
      line_number: 243
      raw_source: Consecutiveness.
      node_name: strong
    span:
      start: 7236
      end: 7252
      ctxt: 0
    slice: Consecutiveness.
- Found:
    query:
      file_name: markdown.md
      line_number: 246
      raw_source: "<!-- prettier-ignore-start -->\n"
      node_name: raw
    span:
      start: 7359
      end: 7389
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 248
      raw_source: ""
      node_name: block_quote
    span:
      start: 7391
      end: 7412
      ctxt: 0
    slice: "> ### Foo\n> bar\n> baz"
- Found:
    query:
      file_name: markdown.md
      line_number: 248
      raw_source: Foo
      node_name: rubric
    span:
      start: 7397
      end: 7400
      ctxt: 0
    slice: Foo
- Found:
    query:
      file_name: markdown.md
      line_number: 249
      raw_source: "bar\nbaz"
      node_name: paragraph
    span:
      start: 7696
      end: 7703
      ctxt: 0
    slice: "bar\nbaz"
- Found:
    query:
      file_name: markdown.md
      line_number: 252
      raw_source: "The space or tab after the `>` characters can be omitted:"
      node_name: paragraph
    span:
      start: 7414
      end: 7471
      ctxt: 0
    slice: "The space or tab after the `>` characters can be omitted:"
- Found:
    query:
      file_name: markdown.md
      line_number: 252
      raw_source: ">"
      node_name: literal
    span:
      start: 7442
      end: 7443
      ctxt: 0
    slice: ">"
- Found:
    query:
      file_name: markdown.md
      line_number: 254
      raw_source: ""
      node_name: block_quote
    span:
      start: 7473
      end: 7492
      ctxt: 0
    slice: ">### Bar\n>bar\n> baz"
- Found:
    query:
      file_name: markdown.md
      line_number: 254
      raw_source: Bar
      node_name: rubric
    span:
      start: 7478
      end: 7481
      ctxt: 0
    slice: Bar
- Found:
    query:
      file_name: markdown.md
      line_number: 255
      raw_source: "bar\nbaz"
      node_name: paragraph
    span:
      start: 7696
      end: 7703
      ctxt: 0
    slice: "bar\nbaz"
- Found:
    query:
      file_name: markdown.md
      line_number: 258
      raw_source: "The `>` characters can be preceded by up to three spaces of indentation:"
      node_name: paragraph
    span:
      start: 7494
      end: 7566
      ctxt: 0
    slice: "The `>` characters can be preceded by up to three spaces of indentation:"
- Found:
    query:
      file_name: markdown.md
      line_number: 258
      raw_source: ">"
      node_name: literal
    span:
      start: 7499
      end: 7500
      ctxt: 0
    slice: ">"
- Found:
    query:
      file_name: markdown.md
      line_number: 260
      raw_source: ""
      node_name: block_quote
    span:
      start: 7494
      end: 7596
      ctxt: 0
    slice: "The `>` characters can be preceded by up to three spaces of indentation:\n\n   > ### Baz\n   > bar\n > baz"
- Found:
    query:
      file_name: markdown.md
      line_number: 260
      raw_source: Baz
      node_name: rubric
    span:
      start: 7577
      end: 7580
      ctxt: 0
    slice: Baz
- Found:
    query:
      file_name: markdown.md
      line_number: 261
      raw_source: "bar\nbaz"
      node_name: paragraph
    span:
      start: 7696
      end: 7703
      ctxt: 0
    slice: "bar\nbaz"
- Found:
    query:
      file_name: markdown.md
      line_number: 264
      raw_source: "The Laziness clause allows us to omit the `>` before\n[paragraph continuation text]:"
      node_name: paragraph
    span:
      start: 7598
      end: 7681
      ctxt: 0
    slice: "The Laziness clause allows us to omit the `>` before\n[paragraph continuation text]:"
- Found:
    query:
      file_name: markdown.md
      line_number: 264
      raw_source: ">"
      node_name: literal
    span:
      start: 7641
      end: 7642
      ctxt: 0
    slice: ">"
- Found:
    query:
      file_name: markdown.md
      line_number: 267
      raw_source: ""
      node_name: block_quote
    span:
      start: 7683
      end: 7703
      ctxt: 0
    slice: "> ### Quux\n> bar\nbaz"
- Found:
    query:
      file_name: markdown.md
      line_number: 267
      raw_source: Quux
      node_name: rubric
    span:
      start: 7689
      end: 7693
      ctxt: 0
    slice: Quux
- Found:
    query:
      file_name: markdown.md
      line_number: 268
      raw_source: "bar\nbaz"
      node_name: paragraph
    span:
      start: 7696
      end: 7703
      ctxt: 0
    slice: "bar\nbaz"
- Found:
    query:
      file_name: markdown.md
      line_number: 271
      raw_source: "A block quote can contain some lazy and some non-lazy\ncontinuation lines:"
      node_name: paragraph
    span:
      start: 7705
      end: 7778
      ctxt: 0
    slice: "A block quote can contain some lazy and some non-lazy\ncontinuation lines:"
- Found:
    query:
      file_name: markdown.md
      line_number: 274
      raw_source: ""
      node_name: block_quote
    span:
      start: 7780
      end: 7795
      ctxt: 0
    slice: "> bar\nbaz\n> foo"
- Found:
    query:
      file_name: markdown.md
      line_number: 274
      raw_source: "bar\nbaz\nfoo"
      node_name: paragraph
    span:
      start: 7780
      end: 7795
      ctxt: 0
    slice: "> bar\nbaz\n> foo"
- Found:
    query:
      file_name: markdown.md
      line_number: 278
      raw_source: "<!-- prettier-ignore-end -->\n"
      node_name: raw
    span:
      start: 7797
      end: 7825
      ctxt: 0
    slice: "<!-- prettier-ignore-end -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 280
      raw_source: ""
      node_name: section
    span:
      start: 7827
      end: 7844
      ctxt: 0
    slice: "## 5.2 List items"
- Found:
    query:
      file_name: markdown.md
      line_number: 280
      raw_source: 5.2 List items
      node_name: title
    span:
      start: 7830
      end: 7844
      ctxt: 0
    slice: 5.2 List items
- Found:
    query:
      file_name: markdown.md
      line_number: 282
      raw_source: "A list marker is a\n[bullet list marker] or an [ordered list marker]."
      node_name: paragraph
    span:
      start: 7846
      end: 7914
      ctxt: 0
    slice: "A list marker is a\n[bullet list marker] or an [ordered list marker]."
- Found:
    query:
      file_name: markdown.md
      line_number: 285
      raw_source: "A bullet list marker\nis a `-`, `+`, or `*` character."
      node_name: paragraph
    span:
      start: 7916
      end: 7969
      ctxt: 0
    slice: "A bullet list marker\nis a `-`, `+`, or `*` character."
- Found:
    query:
      file_name: markdown.md
      line_number: 285
      raw_source: "-"
      node_name: literal
    span:
      start: 7943
      end: 7944
      ctxt: 0
    slice: "-"
- Found:
    query:
      file_name: markdown.md
      line_number: 285
      raw_source: +
      node_name: literal
    span:
      start: 7948
      end: 7949
      ctxt: 0
    slice: +
- Found:
    query:
      file_name: markdown.md
      line_number: 285
      raw_source: "*"
      node_name: literal
    span:
      start: 7956
      end: 7957
      ctxt: 0
    slice: "*"
- Found:
    query:
      file_name: markdown.md
      line_number: 288
      raw_source: "An ordered list marker\nis a sequence of 1--9 arabic digits (`0-9`), followed by either a\n`.` character or a `)` character. (The reason for the length\nlimit is that with 10 digits we start seeing integer overflows\nin some browsers.)"
      node_name: paragraph
    span:
      start: 7971
      end: 8202
      ctxt: 0
    slice: "An ordered list marker\nis a sequence of 1--9 arabic digits (`0-9`), followed by either a\n`.` character or a `)` character. (The reason for the length\nlimit is that with 10 digits we start seeing integer overflows\nin some browsers.)"
- Found:
    query:
      file_name: markdown.md
      line_number: 288
      raw_source: 0-9
      node_name: literal
    span:
      start: 8032
      end: 8035
      ctxt: 0
    slice: 0-9
- Found:
    query:
      file_name: markdown.md
      line_number: 288
      raw_source: "."
      node_name: literal
    span:
      start: 8061
      end: 8062
      ctxt: 0
    slice: "."
- Found:
    query:
      file_name: markdown.md
      line_number: 288
      raw_source: )
      node_name: literal
    span:
      start: 8036
      end: 8037
      ctxt: 0
    slice: )
- Found:
    query:
      file_name: markdown.md
      line_number: 294
      raw_source: "The following rules define [list items]:"
      node_name: paragraph
    span:
      start: 8204
      end: 8244
      ctxt: 0
    slice: "The following rules define [list items]:"
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 8246
      end: 8886
      ctxt: 0
    slice: "1.  **Basic case.** If a sequence of lines _Ls_ constitute a sequence of\n    blocks _Bs_ starting with a character other than a space or tab, and _M_ is\n    a list marker of width _W_ followed by 1 ≤ _N_ ≤ 4 spaces of indentation,\n    then the result of prepending _M_ and the following spaces to the first line\n    of _Ls_, and indenting subsequent lines of _Ls_ by _W + N_ spaces, is a\n    list item with _Bs_ as its contents. The type of the list item\n    (bullet or ordered) is determined by the type of its list marker.\n    If the list item is ordered, then it is also assigned a start\n    number, based on the ordered list marker."
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: ""
      node_name: list_item
    span:
      start: 8246
      end: 8886
      ctxt: 0
    slice: "1.  **Basic case.** If a sequence of lines _Ls_ constitute a sequence of\n    blocks _Bs_ starting with a character other than a space or tab, and _M_ is\n    a list marker of width _W_ followed by 1 ≤ _N_ ≤ 4 spaces of indentation,\n    then the result of prepending _M_ and the following spaces to the first line\n    of _Ls_, and indenting subsequent lines of _Ls_ by _W + N_ spaces, is a\n    list item with _Bs_ as its contents. The type of the list item\n    (bullet or ordered) is determined by the type of its list marker.\n    If the list item is ordered, then it is also assigned a start\n    number, based on the ordered list marker."
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: "**Basic case.** If a sequence of lines _Ls_ constitute a sequence of\nblocks _Bs_ starting with a character other than a space or tab, and _M_ is\na list marker of width _W_ followed by 1 ≤ _N_ ≤ 4 spaces of indentation,\nthen the result of prepending _M_ and the following spaces to the first line\nof _Ls_, and indenting subsequent lines of _Ls_ by _W + N_ spaces, is a\nlist item with _Bs_ as its contents. The type of the list item\n(bullet or ordered) is determined by the type of its list marker.\nIf the list item is ordered, then it is also assigned a start\nnumber, based on the ordered list marker."
      node_name: paragraph
    span:
      start: 8246
      end: 8886
      ctxt: 0
    slice: "1.  **Basic case.** If a sequence of lines _Ls_ constitute a sequence of\n    blocks _Bs_ starting with a character other than a space or tab, and _M_ is\n    a list marker of width _W_ followed by 1 ≤ _N_ ≤ 4 spaces of indentation,\n    then the result of prepending _M_ and the following spaces to the first line\n    of _Ls_, and indenting subsequent lines of _Ls_ by _W + N_ spaces, is a\n    list item with _Bs_ as its contents. The type of the list item\n    (bullet or ordered) is determined by the type of its list marker.\n    If the list item is ordered, then it is also assigned a start\n    number, based on the ordered list marker."
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: Basic case.
      node_name: strong
    span:
      start: 8252
      end: 8263
      ctxt: 0
    slice: Basic case.
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: Ls
      node_name: emphasis
    span:
      start: 8290
      end: 8292
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: Bs
      node_name: emphasis
    span:
      start: 8331
      end: 8333
      ctxt: 0
    slice: Bs
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: M
      node_name: emphasis
    span:
      start: 8393
      end: 8394
      ctxt: 0
    slice: M
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: W
      node_name: emphasis
    span:
      start: 8427
      end: 8428
      ctxt: 0
    slice: W
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: N
      node_name: emphasis
    span:
      start: 8449
      end: 8450
      ctxt: 0
    slice: N
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: M
      node_name: emphasis
    span:
      start: 8393
      end: 8394
      ctxt: 0
    slice: M
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: Ls
      node_name: emphasis
    span:
      start: 8570
      end: 8572
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: Ls
      node_name: emphasis
    span:
      start: 8570
      end: 8572
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: W + N
      node_name: emphasis
    span:
      start: 8618
      end: 8623
      ctxt: 0
    slice: W + N
- Found:
    query:
      file_name: markdown.md
      line_number: 296
      raw_source: Bs
      node_name: emphasis
    span:
      start: 8658
      end: 8660
      ctxt: 0
    slice: Bs
- Found:
    query:
      file_name: markdown.md
      line_number: 306
      raw_source: "Exceptions:"
      node_name: paragraph
    span:
      start: 8892
      end: 8903
      ctxt: 0
    slice: "Exceptions:"
- Found:
    query:
      file_name: markdown.md
      line_number: 308
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 8888
      end: 9320
      ctxt: 0
    slice: "    Exceptions:\n\n    1. When the first list item in a [list] interrupts\n       a paragraph---that is, when it starts on a line that would\n       otherwise count as [paragraph continuation text]---then (a)\n       the lines _Ls_ must not begin with a blank line, and (b) if\n       the list item is ordered, the start number must be 1.\n    2. If any line is a [thematic break][thematic breaks] then\n       that line is not a list item."
- Found:
    query:
      file_name: markdown.md
      line_number: 308
      raw_source: ""
      node_name: list_item
    span:
      start: 8888
      end: 9320
      ctxt: 0
    slice: "    Exceptions:\n\n    1. When the first list item in a [list] interrupts\n       a paragraph---that is, when it starts on a line that would\n       otherwise count as [paragraph continuation text]---then (a)\n       the lines _Ls_ must not begin with a blank line, and (b) if\n       the list item is ordered, the start number must be 1.\n    2. If any line is a [thematic break][thematic breaks] then\n       that line is not a list item."
- Found:
    query:
      file_name: markdown.md
      line_number: 308
      raw_source: "When the first list item in a [list] interrupts\na paragraph---that is, when it starts on a line that would\notherwise count as [paragraph continuation text]---then (a)\nthe lines _Ls_ must not begin with a blank line, and (b) if\nthe list item is ordered, the start number must be 1."
      node_name: paragraph
    span:
      start: 8905
      end: 9220
      ctxt: 0
    slice: "    1. When the first list item in a [list] interrupts\n       a paragraph---that is, when it starts on a line that would\n       otherwise count as [paragraph continuation text]---then (a)\n       the lines _Ls_ must not begin with a blank line, and (b) if\n       the list item is ordered, the start number must be 1."
- Found:
    query:
      file_name: markdown.md
      line_number: 308
      raw_source: Ls
      node_name: emphasis
    span:
      start: 9111
      end: 9113
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 313
      raw_source: ""
      node_name: list_item
    span:
      start: 8888
      end: 9320
      ctxt: 0
    slice: "    Exceptions:\n\n    1. When the first list item in a [list] interrupts\n       a paragraph---that is, when it starts on a line that would\n       otherwise count as [paragraph continuation text]---then (a)\n       the lines _Ls_ must not begin with a blank line, and (b) if\n       the list item is ordered, the start number must be 1.\n    2. If any line is a [thematic break][thematic breaks] then\n       that line is not a list item."
- Found:
    query:
      file_name: markdown.md
      line_number: 313
      raw_source: "If any line is a [thematic break][thematic breaks] then\nthat line is not a list item."
      node_name: paragraph
    span:
      start: 9221
      end: 9320
      ctxt: 0
    slice: "    2. If any line is a [thematic break][thematic breaks] then\n       that line is not a list item."
- Found:
    query:
      file_name: markdown.md
      line_number: 316
      raw_source: "<!-- prettier-ignore-start -->\n"
      node_name: raw
    span:
      start: 9322
      end: 9352
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 318
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 9354
      end: 9389
      ctxt: 0
    slice: "1.  A paragraph\n    with two lines."
- Found:
    query:
      file_name: markdown.md
      line_number: 318
      raw_source: ""
      node_name: list_item
    span:
      start: 9354
      end: 9389
      ctxt: 0
    slice: "1.  A paragraph\n    with two lines."
- Found:
    query:
      file_name: markdown.md
      line_number: 318
      raw_source: "A paragraph\nwith two lines."
      node_name: paragraph
    span:
      start: 9354
      end: 9389
      ctxt: 0
    slice: "1.  A paragraph\n    with two lines."
- Found:
    query:
      file_name: markdown.md
      line_number: 321
      raw_source: "indented code\n"
      node_name: literal_block
    span:
      start: 9399
      end: 9412
      ctxt: 0
    slice: indented code
- Found:
    query:
      file_name: markdown.md
      line_number: 323
      raw_source: ""
      node_name: block_quote
    span:
      start: 9391
      end: 9434
      ctxt: 0
    slice: "        indented code\n\n    > A block quote."
- Found:
    query:
      file_name: markdown.md
      line_number: 323
      raw_source: A block quote.
      node_name: paragraph
    span:
      start: 9420
      end: 9434
      ctxt: 0
    slice: A block quote.
- Found:
    query:
      file_name: markdown.md
      line_number: 325
      raw_source: ""
      node_name: block_quote
    span:
      start: 9414
      end: 9464
      ctxt: 0
    slice: "    > A block quote.\n\n   > > 1.  one\n>>\n>>     two"
- Found:
    query:
      file_name: markdown.md
      line_number: 325
      raw_source: ""
      node_name: block_quote
    span:
      start: 9414
      end: 9464
      ctxt: 0
    slice: "    > A block quote.\n\n   > > 1.  one\n>>\n>>     two"
- Found:
    query:
      file_name: markdown.md
      line_number: 325
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 9414
      end: 9464
      ctxt: 0
    slice: "    > A block quote.\n\n   > > 1.  one\n>>\n>>     two"
- Found:
    query:
      file_name: markdown.md
      line_number: 325
      raw_source: ""
      node_name: list_item
    span:
      start: 9414
      end: 9464
      ctxt: 0
    slice: "    > A block quote.\n\n   > > 1.  one\n>>\n>>     two"
- Found:
    query:
      file_name: markdown.md
      line_number: 325
      raw_source: one
      node_name: paragraph
    span:
      start: 9447
      end: 9450
      ctxt: 0
    slice: one
- Found:
    query:
      file_name: markdown.md
      line_number: 327
      raw_source: two
      node_name: paragraph
    span:
      start: 9461
      end: 9464
      ctxt: 0
    slice: two
- Found:
    query:
      file_name: markdown.md
      line_number: 329
      raw_source: "A list item may contain blocks that are separated by more than\none blank line."
      node_name: paragraph
    span:
      start: 9466
      end: 9544
      ctxt: 0
    slice: "A list item may contain blocks that are separated by more than\none blank line."
- Found:
    query:
      file_name: markdown.md
      line_number: 332
      raw_source: ""
      node_name: bullet_list
    span:
      start: 9546
      end: 9551
      ctxt: 0
    slice: "- foo"
- Found:
    query:
      file_name: markdown.md
      line_number: 332
      raw_source: ""
      node_name: list_item
    span:
      start: 9546
      end: 9551
      ctxt: 0
    slice: "- foo"
- Found:
    query:
      file_name: markdown.md
      line_number: 332
      raw_source: foo
      node_name: paragraph
    span:
      start: 9548
      end: 9551
      ctxt: 0
    slice: foo
- Found:
    query:
      file_name: markdown.md
      line_number: 335
      raw_source: bar
      node_name: paragraph
    span:
      start: 9556
      end: 9559
      ctxt: 0
    slice: bar
- Found:
    query:
      file_name: markdown.md
      line_number: 337
      raw_source: "A list item may contain any kind of block:"
      node_name: paragraph
    span:
      start: 9561
      end: 9603
      ctxt: 0
    slice: "A list item may contain any kind of block:"
- Found:
    query:
      file_name: markdown.md
      line_number: 339
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 9605
      end: 9612
      ctxt: 0
    slice: 1.  foo
- Found:
    query:
      file_name: markdown.md
      line_number: 339
      raw_source: ""
      node_name: list_item
    span:
      start: 9605
      end: 9612
      ctxt: 0
    slice: 1.  foo
- Found:
    query:
      file_name: markdown.md
      line_number: 339
      raw_source: foo
      node_name: paragraph
    span:
      start: 9609
      end: 9612
      ctxt: 0
    slice: foo
- Found:
    query:
      file_name: markdown.md
      line_number: 341
      raw_source: "bar\n"
      node_name: literal_block
    span:
      start: 9626
      end: 9629
      ctxt: 0
    slice: bar
- Found:
    query:
      file_name: markdown.md
      line_number: 345
      raw_source: baz
      node_name: paragraph
    span:
      start: 9643
      end: 9646
      ctxt: 0
    slice: baz
- Found:
    query:
      file_name: markdown.md
      line_number: 347
      raw_source: ""
      node_name: block_quote
    span:
      start: 9639
      end: 9657
      ctxt: 0
    slice: "    baz\n\n    > bam"
- Found:
    query:
      file_name: markdown.md
      line_number: 347
      raw_source: bam
      node_name: paragraph
    span:
      start: 9654
      end: 9657
      ctxt: 0
    slice: bam
- Found:
    query:
      file_name: markdown.md
      line_number: 349
      raw_source: "A list item that contains an indented code block will preserve\nempty lines within the code block verbatim."
      node_name: paragraph
    span:
      start: 9659
      end: 9765
      ctxt: 0
    slice: "A list item that contains an indented code block will preserve\nempty lines within the code block verbatim."
- Found:
    query:
      file_name: markdown.md
      line_number: 352
      raw_source: ""
      node_name: bullet_list
    span:
      start: 9767
      end: 9772
      ctxt: 0
    slice: "- Foo"
- Found:
    query:
      file_name: markdown.md
      line_number: 352
      raw_source: ""
      node_name: list_item
    span:
      start: 9767
      end: 9772
      ctxt: 0
    slice: "- Foo"
- Found:
    query:
      file_name: markdown.md
      line_number: 352
      raw_source: Foo
      node_name: paragraph
    span:
      start: 9769
      end: 9772
      ctxt: 0
    slice: Foo
- Found:
    query:
      file_name: markdown.md
      line_number: 354
      raw_source: "bar\n\n\nbaz\n"
      node_name: literal_block
    span:
      start: 9774
      end: 9795
      ctxt: 0
    slice: "      bar\n\n\n      baz"
- Found:
    query:
      file_name: markdown.md
      line_number: 359
      raw_source: "<!-- prettier-ignore-end -->\n"
      node_name: raw
    span:
      start: 9797
      end: 9825
      ctxt: 0
    slice: "<!-- prettier-ignore-end -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 9827
      end: 10483
      ctxt: 0
    slice: "3.  **Item starting with a blank line.** If a sequence of lines _Ls_\n    starting with a single [blank line] constitute a (possibly empty)\n    sequence of blocks _Bs_, and _M_ is a list marker of width _W_,\n    then the result of prepending _M_ to the first line of _Ls_, and\n    preceding subsequent lines of _Ls_ by _W + 1_ spaces of indentation, is a\n    list item with _Bs_ as its contents.\n    If a line is empty, then it need not be indented. The type of the\n    list item (bullet or ordered) is determined by the type of its list\n    marker. If the list item is ordered, then it is also assigned a\n    start number, based on the ordered list marker."
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: ""
      node_name: list_item
    span:
      start: 9827
      end: 10483
      ctxt: 0
    slice: "3.  **Item starting with a blank line.** If a sequence of lines _Ls_\n    starting with a single [blank line] constitute a (possibly empty)\n    sequence of blocks _Bs_, and _M_ is a list marker of width _W_,\n    then the result of prepending _M_ to the first line of _Ls_, and\n    preceding subsequent lines of _Ls_ by _W + 1_ spaces of indentation, is a\n    list item with _Bs_ as its contents.\n    If a line is empty, then it need not be indented. The type of the\n    list item (bullet or ordered) is determined by the type of its list\n    marker. If the list item is ordered, then it is also assigned a\n    start number, based on the ordered list marker."
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: "**Item starting with a blank line.** If a sequence of lines _Ls_\nstarting with a single [blank line] constitute a (possibly empty)\nsequence of blocks _Bs_, and _M_ is a list marker of width _W_,\nthen the result of prepending _M_ to the first line of _Ls_, and\npreceding subsequent lines of _Ls_ by _W + 1_ spaces of indentation, is a\nlist item with _Bs_ as its contents.\nIf a line is empty, then it need not be indented. The type of the\nlist item (bullet or ordered) is determined by the type of its list\nmarker. If the list item is ordered, then it is also assigned a\nstart number, based on the ordered list marker."
      node_name: paragraph
    span:
      start: 9827
      end: 10483
      ctxt: 0
    slice: "3.  **Item starting with a blank line.** If a sequence of lines _Ls_\n    starting with a single [blank line] constitute a (possibly empty)\n    sequence of blocks _Bs_, and _M_ is a list marker of width _W_,\n    then the result of prepending _M_ to the first line of _Ls_, and\n    preceding subsequent lines of _Ls_ by _W + 1_ spaces of indentation, is a\n    list item with _Bs_ as its contents.\n    If a line is empty, then it need not be indented. The type of the\n    list item (bullet or ordered) is determined by the type of its list\n    marker. If the list item is ordered, then it is also assigned a\n    start number, based on the ordered list marker."
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: Item starting with a blank line.
      node_name: strong
    span:
      start: 9833
      end: 9865
      ctxt: 0
    slice: Item starting with a blank line.
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: Ls
      node_name: emphasis
    span:
      start: 9892
      end: 9894
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: Bs
      node_name: emphasis
    span:
      start: 9990
      end: 9992
      ctxt: 0
    slice: Bs
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: M
      node_name: emphasis
    span:
      start: 10000
      end: 10001
      ctxt: 0
    slice: M
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: W
      node_name: emphasis
    span:
      start: 10030
      end: 10031
      ctxt: 0
    slice: W
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: M
      node_name: emphasis
    span:
      start: 10000
      end: 10001
      ctxt: 0
    slice: M
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: Ls
      node_name: emphasis
    span:
      start: 10094
      end: 10096
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: Ls
      node_name: emphasis
    span:
      start: 10094
      end: 10096
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: W + 1
      node_name: emphasis
    span:
      start: 10146
      end: 10151
      ctxt: 0
    slice: W + 1
- Found:
    query:
      file_name: markdown.md
      line_number: 361
      raw_source: Bs
      node_name: emphasis
    span:
      start: 10201
      end: 10203
      ctxt: 0
    slice: Bs
- Found:
    query:
      file_name: markdown.md
      line_number: 372
      raw_source: "<!-- prettier-ignore-start -->\n"
      node_name: raw
    span:
      start: 10485
      end: 10515
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 374
      raw_source: ""
      node_name: bullet_list
    span:
      start: 10517
      end: 10556
      ctxt: 0
    slice: "-\n  foo\n-\n  ```\n  bar\n  ```\n-\n      baz"
- Found:
    query:
      file_name: markdown.md
      line_number: 374
      raw_source: ""
      node_name: list_item
    span:
      start: 10517
      end: 10556
      ctxt: 0
    slice: "-\n  foo\n-\n  ```\n  bar\n  ```\n-\n      baz"
- Found:
    query:
      file_name: markdown.md
      line_number: 375
      raw_source: foo
      node_name: paragraph
    span:
      start: 10521
      end: 10524
      ctxt: 0
    slice: foo
- Found:
    query:
      file_name: markdown.md
      line_number: 376
      raw_source: ""
      node_name: list_item
    span:
      start: 10517
      end: 10556
      ctxt: 0
    slice: "-\n  foo\n-\n  ```\n  bar\n  ```\n-\n      baz"
- Found:
    query:
      file_name: markdown.md
      line_number: 377
      raw_source: "bar\n"
      node_name: literal_block
    span:
      start: 10535
      end: 10538
      ctxt: 0
    slice: bar
- Found:
    query:
      file_name: markdown.md
      line_number: 380
      raw_source: ""
      node_name: list_item
    span:
      start: 10517
      end: 10556
      ctxt: 0
    slice: "-\n  foo\n-\n  ```\n  bar\n  ```\n-\n      baz"
- Found:
    query:
      file_name: markdown.md
      line_number: 381
      raw_source: "baz\n"
      node_name: literal_block
    span:
      start: 10553
      end: 10556
      ctxt: 0
    slice: baz
- Found:
    query:
      file_name: markdown.md
      line_number: 383
      raw_source: "<!-- prettier-ignore-end -->\n"
      node_name: raw
    span:
      start: 10558
      end: 10586
      ctxt: 0
    slice: "<!-- prettier-ignore-end -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 385
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 10588
      end: 10936
      ctxt: 0
    slice: "4.  **Indentation.** If a sequence of lines _Ls_ constitutes a list item\n    according to rule #1, #2, or #3, then the result of preceding each line\n    of _Ls_ by up to three spaces of indentation (the same for each line) also\n    constitutes a list item with the same contents and attributes. If a line is\n    empty, then it need not be indented."
- Found:
    query:
      file_name: markdown.md
      line_number: 385
      raw_source: ""
      node_name: list_item
    span:
      start: 10588
      end: 10936
      ctxt: 0
    slice: "4.  **Indentation.** If a sequence of lines _Ls_ constitutes a list item\n    according to rule #1, #2, or #3, then the result of preceding each line\n    of _Ls_ by up to three spaces of indentation (the same for each line) also\n    constitutes a list item with the same contents and attributes. If a line is\n    empty, then it need not be indented."
- Found:
    query:
      file_name: markdown.md
      line_number: 385
      raw_source: "**Indentation.** If a sequence of lines _Ls_ constitutes a list item\naccording to rule #1, #2, or #3, then the result of preceding each line\nof _Ls_ by up to three spaces of indentation (the same for each line) also\nconstitutes a list item with the same contents and attributes. If a line is\nempty, then it need not be indented."
      node_name: paragraph
    span:
      start: 10588
      end: 10936
      ctxt: 0
    slice: "4.  **Indentation.** If a sequence of lines _Ls_ constitutes a list item\n    according to rule #1, #2, or #3, then the result of preceding each line\n    of _Ls_ by up to three spaces of indentation (the same for each line) also\n    constitutes a list item with the same contents and attributes. If a line is\n    empty, then it need not be indented."
- Found:
    query:
      file_name: markdown.md
      line_number: 385
      raw_source: Indentation.
      node_name: strong
    span:
      start: 10594
      end: 10606
      ctxt: 0
    slice: Indentation.
- Found:
    query:
      file_name: markdown.md
      line_number: 385
      raw_source: Ls
      node_name: emphasis
    span:
      start: 10633
      end: 10635
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 385
      raw_source: Ls
      node_name: emphasis
    span:
      start: 10633
      end: 10635
      ctxt: 0
    slice: Ls
- Found:
    query:
      file_name: markdown.md
      line_number: 391
      raw_source: "<!-- prettier-ignore-start -->\n"
      node_name: raw
    span:
      start: 10938
      end: 10968
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->"
- Found:
    query:
      file_name: markdown.md
      line_number: 393
      raw_source: ""
      node_name: enumerated_list
    span:
      start: 10938
      end: 11007
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->\n\n 1.  A paragraph\n     with two lines."
- Found:
    query:
      file_name: markdown.md
      line_number: 393
      raw_source: ""
      node_name: list_item
    span:
      start: 10938
      end: 11007
      ctxt: 0
    slice: "<!-- prettier-ignore-start -->\n\n 1.  A paragraph\n     with two lines."
- Found:
    query:
      file_name: markdown.md
      line_number: 393
      raw_source: "A paragraph\nwith two lines."
      node_name: paragraph
    span:
      start: 10970
      end: 11007
      ctxt: 0
    slice: " 1.  A paragraph\n     with two lines."
- Found:
    query:
      file_name: markdown.md
      line_number: 396
      raw_source: "indented code\n"
      node_name: literal_block
    span:
      start: 11018
      end: 11031
      ctxt: 0
    slice: indented code
- Found:
    query:
      file_name: markdown.md
      line_number: 398
      raw_source: ""
      node_name: block_quote
    span:
      start: 11009
      end: 11054
      ctxt: 0
    slice: "         indented code\n\n     > A block quote."
- Found:
    query:
      file_name: markdown.md
      line_number: 398
      raw_source: A block quote.
      node_name: paragraph
    span:
      start: 11040
      end: 11054
      ctxt: 0
    slice: A block quote.
- Found:
    query:
      file_name: markdown.md
      line_number: 400
      raw_source: ""
      node_name: list_item
    span:
      start: 11033
      end: 11095
      ctxt: 0
    slice: "     > A block quote.\n\n  1.  A paragraph\n      with two lines."
- Found:
    query:
      file_name: markdown.md
      line_number: 400
      raw_source: "A paragraph\nwith two lines."
      node_name: paragraph
    span:
      start: 11056
      end: 11095
      ctxt: 0
    slice: "  1.  A paragraph\n      with two lines."
- Found:
    query:
      file_name: markdown.md
      line_number: 403
      raw_source: "indented code\n"
      node_name: literal_block
    span:
      start: 11107
      end: 11120
      ctxt: 0
    slice: indented code
- Found:
    query:
      file_name: markdown.md
      line_number: 405
      raw_source: ""
      node_name: block_quote
    span:
      start: 11097
      end: 11144
      ctxt: 0
    slice: "          indented code\n\n      > A block quote."
- Found:
    query:
      file_name: markdown.md
      line_number: 405
      raw_source: A block quote.
      node_name: paragraph
    span:
      start: 11130
      end: 11144
      ctxt: 0
    slice: A block quote.
- Found:
    query:
      file_name: markdown.md
      line_number: 407
      raw_source: "<!-- prettier-ignore-end -->\n"
      node_name: raw
    span:
      start: 11146
      end: 11174
      ctxt: 0
    slice: "<!-- prettier-ignore-end -->"
